/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {

        ListNode*curr=head;
        int length=0;
        while(curr!=nullptr)
        {
            curr=curr->next;
            length++;

        }
        curr=head;

int k=1;

ListNode*prev=nullptr;

while(k<length-n+1)
{
    prev=curr;
    curr=curr->next;
    k++;
}
ListNode*temp=curr;
if(prev!=nullptr)
{
    prev->next=curr->next;
    delete temp;

}

else if(n==length)
{
    ListNode*tempo=head;
    head=head->next;
    delete tempo;
    
}


return head;
    }
};