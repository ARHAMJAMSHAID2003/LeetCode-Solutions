/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {

        ListNode* head1 = l1;
        ListNode* head2 = l2;

        ListNode* dummy = new ListNode(0);
        ListNode* curr = dummy;
        
        int carry = 0;
        int digit;

        while (head1 != nullptr || head2 != nullptr) {
            int sum = carry;
            
            if (head1 != nullptr) {
                sum += head1->val;
                head1 = head1->next;
            }
            
            if (head2 != nullptr) {
                sum += head2->val;
                head2 = head2->next;
            }
            
            carry = sum / 10;
            digit = sum % 10;
            curr->next = new ListNode(digit);
            curr = curr->next;
        }

        if (carry > 0) {
            curr->next = new ListNode(carry);
        }

        return dummy->next;
    }
};
