/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {

        

        ListNode* temp1=headA;
        ListNode*temp2=headB;
        int l1=0;
        int l2=0;

        while(temp1!=nullptr)
        {
            temp1=temp1->next;
            l1++;


        }
        temp1=headA;
        while(temp2!=nullptr)
        {
            temp2=temp2->next;
            l2++;


        }
        temp2=headB;

    if(l1>l2)
    {
        while(l1!=l2)
        {
            temp1=temp1->next;
            l1--;
        }


        
    }
    
     else  if(l1<l2)
    {
        while(l2!=l1)
        {
            temp2=temp2->next;
            l2--;
        }
    }

        while(temp1!=nullptr && temp2!=nullptr )
        {
            
            
            if(temp1==temp2)
            {
                return temp1;
            }
            temp1=temp1->next;
            temp2=temp2->next;
        

        
        }
        
        return nullptr;
    
    }
};