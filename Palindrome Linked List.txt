/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        if(head==nullptr || head->next==nullptr)
        {
            return true;
        }

    
        ListNode*temp=head;
        
        vector<int>store;
        stack<int>hold;
        
        while(temp!=nullptr)
        {
            
            hold.push(temp->val);

            temp=temp->next;
        }
        temp=head;
        
        while(!hold.empty())

        {
            int val=hold.top();
            store.push_back(val);
            hold.pop();


        }
        for(int i=0;i<store.size();i++)
        {
            if(store[i]!=temp->val)
            {
                return false;
                break;
            }
            temp=temp->next;
        }
        



        return true;
    }
};